@model BugTracker.Models.Ticket
@{
    ViewBag.Title = "Create";
}
<style>

</style>

<h2>Create Ticket</h2>

<div class="row">
    <div class="col-md-10 col-md-offset-1" style="padding-top:50px">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                        @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                        @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                <div class="form-group left">
                    <h3> Choose Project</h3>
                    <div>
                        @Html.DropDownListFor(model => model.ProjectId, (SelectList)ViewBag.ProjectList)
                        @*@Html.DropDownList("ProjectList", null, new { @class = "form-control"})*@
                    </div>
                    @*@Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.ListBox()
                            @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                        </div>*@
                </div>
                <div class="form-group left">
                    <h3> Choose Ticket Type</h3>
                    <div>@Html.DropDownListFor(model => model.TicketTypeId, (SelectList)ViewBag.TypeList) </div>
                    @*@Html.LabelFor(model => model.TicketTypeId, htmlAttributes: new { @class = "control-label col-md-2" })

                        <div class="col-md-10">
                            @Html.ListBox("Ticket Types", ViewBag.typeList);
                            @Html.EditorFor(model => model.TicketTypeId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                        </div>*@
                </div>
                <div class="form-group left">
                    <h3> Choose Ticket Priority</h3>
                    <div>@Html.DropDownListFor(model => model.TicketPriorityId, (SelectList)ViewBag.PriorityList) </div>
                    @*<div class="col-md-10">
                            @Html.EditorFor(model => model.TicketPriorityId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                        </div>*@
                </div>
                @*<div class="form-group">
                        @Html.LabelFor(model => model.TicketStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TicketStatusId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OwnerUserId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OwnerUserId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OwnerUserId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignedToUserId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AssignedToUserId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>

        }
    </div>
</div>
@*<div>
        @Html.ActionLink("Back to Project", "Details", "Projects", new { id = Model.ProjectId }, null)
    </div>*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
